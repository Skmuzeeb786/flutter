Question 19: Create the form which consists firstName, lastName, phoneNumber, email, and all scenarios mentioned below:-

● firstName and lastName should be a minimum character of 5 and a maximum of 15.
● Add proper validation for email.
● phoneNumber should be 10 digits and valid.

How will you achieve this problem statement?
Hint 1:- Only use FormBuilderTextField. 
Source code:
import 'package:flutter/material.dart';
import 'package:flutter_form_builder/flutter_form_builder.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'FormBuilder Example',
      home: Scaffold(
        appBar: AppBar(title: Text('FormBuilder Validation')),
        body: Padding(
          padding: EdgeInsets.all(20),
          child: MyForm(),
        ),
      ),
    );
  }
}

class MyForm extends StatefulWidget {
  @override
  State<MyForm> createState() => _MyFormState();
}

class _MyFormState extends State<MyForm> {
  final _formKey = GlobalKey<FormBuilderState>();

  @override
  Widget build(BuildContext context) {
    return FormBuilder(
      key: _formKey,
      child: Column(
        children: [
          // First Name Field
          FormBuilderTextField(
            name: 'firstName',
            decoration: InputDecoration(labelText: 'First Name'),
            validator: FormBuilderValidators.compose([
              FormBuilderValidators.required(context),
              FormBuilderValidators.minLength(context, 5,
                  errorText: 'Minimum 5 characters required'),
              FormBuilderValidators.maxLength(context, 15,
                  errorText: 'Maximum 15 characters allowed'),
            ]),
          ),
          SizedBox(height: 20),

          // Last Name Field
          FormBuilderTextField(
            name: 'lastName',
            decoration: InputDecoration(labelText: 'Last Name'),
            validator: FormBuilderValidators.compose([
              FormBuilderValidators.required(context),
              FormBuilderValidators.minLength(context, 5,
                  errorText: 'Minimum 5 characters required'),
              FormBuilderValidators.maxLength(context, 15,
                  errorText: 'Maximum 15 characters allowed'),
            ]),
          ),
          SizedBox(height: 20),

          // Phone Number Field
          FormBuilderTextField(
            name: 'phoneNumber',
            decoration: InputDecoration(labelText: 'Phone Number'),
            keyboardType: TextInputType.phone,
            validator: FormBuilderValidators.compose([
              FormBuilderValidators.required(context),
              FormBuilderValidators.numeric(context,
                  errorText: 'Only numeric characters allowed'),
              FormBuilderValidators.minLength(context, 10,
                  errorText: 'Phone number must be 10 digits'),
              FormBuilderValidators.maxLength(context, 10,
                  errorText: 'Phone number must be 10 digits'),
            ]),
          ),
          SizedBox(height: 20),

          // Email Field
          FormBuilderTextField(
            name: 'email',
            decoration: InputDecoration(labelText: 'Email'),
            keyboardType: TextInputType.emailAddress,
            validator: FormBuilderValidators.compose([
              FormBuilderValidators.required(context),
              FormBuilderValidators.email(context,
                  errorText: 'Enter a valid email address'),
            ]),
          ),
          SizedBox(height: 30),

          ElevatedButton(
            onPressed: () {
              if (_formKey.currentState?.saveAndValidate() ?? false) {
                final formData = _formKey.currentState?.value;
                print('Form Data: $formData');
                ScaffoldMessenger.of(context).showSnackBar(
                  SnackBar(content: Text('Form successfully submitted!')),
                );
              } else {
                ScaffoldMessenger.of(context).showSnackBar(
                  SnackBar(content: Text('Validation failed. Please check inputs')),
                );
              }
            },
            child: Text('Submit'),
          ),
        ],
      ),
    );
  }
}
